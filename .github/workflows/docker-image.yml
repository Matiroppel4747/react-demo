name: Docker Image CI

on:
  push:
    branches: 
      - main
      - 'release/*'

jobs:
  
  Build-and-Push:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout code 
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set environment
      run: |
        ENVIRONMENT=""
        if [[ $GITHUB_REF == "refs/heads/main" ]]; then
          ENVIRONMENT=main
        elif [[ $GITHUB_REF =~ ^refs/heads/release/.* ]]; then
          ENVIRONMENT=release
        fi
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: npm ci --force

    - name: Build React
      run: npm run build
    
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Git Semantic Version
      uses: paulhatch/semantic-version@v4.0.3
      with:
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "release:"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "feat:"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
    
    - name: Build Docker Image
      run: |
        if [[ $ENVIRONMENT == "main" ]]; then
          docker build -t matiroppel88/react-demo .
        elif [[ $ENVIRONMENT == "release" ]]; then
          NEW_VERSION = ${{ steps.version.outputs.version }}
          docker build -t matiroppel88/react-demo:$NEW_VERSION .
          echo "New version: $NEW_VERSION !!!"          
        fi

    - name: Push Docker Image
      run: |
        if [[ $ENVIRONMENT == "main" ]]; then
          docker push matiroppel88/react-demo
        elif [[ $ENVIRONMENT == "release" ]]; then
          docker push matiroppel88/react-demo:$NEW_VERSION
          echo "New version: $NEW_VERSION !!!"          
        fi
